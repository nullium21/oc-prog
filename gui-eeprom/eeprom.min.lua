local a,b=component.proxy,component.list;local c=a(b("gpu")())local d=b("scr")()c.bind(d)local e,f=c.maxResolution()c.setResolution(e,f)c.setBackground(0xe1e1e1)c.fill(1,1,e,f,' ')local g=a(b("eeprom")())computer.getBootAddress=function()return g.getData()end;computer.setBootAddress=function(h)return g.setData(h)end;local function i(j)local k=a(j)local l,m=k.open("/boot.cfg")if not l then return nil,m end;local n=""repeat local o,m=k.read(l,math.huge)if not o and m then return nil,m end;n=n..(o or"")until not o;local p={}for q,r in string.gmatch(n,"(%w+)=(.-)[\r\n]+")do p[q]=r end;return p end;local function s(j,t)local k=a(j)local l,m=k.open("/"..t)if not l then return nil,m end;local n=""repeat local o,m=k.read(l,math.huge)if not o and m then return nil,m end;n=n..(o or"")until not o;k.close(l)return load(n,"="..t)end;local u={}local v={}local w={}for x in b("filesystem")do local p,m=i(x)if not p then table.insert(v,"warn: couldn't load boot.cfg from "..tostring(x)..": "..tostring(m))else if type(p.boot)=='string'then table.insert(u,{x,p.boot,p.name})table.insert(w,p)else table.insert(v,"warn: couldn't find boot entry in {"..x.."}/boot.cfg")end end end;c.setForeground(0x5a5a5a)for y,z in ipairs(v)do c.set(1,y,z)end;if#u==0 then local z="error: couldn't find a boot device. "c.set((e-#z)/2,f/2,z)while true do end else local A=1;local function B()local C=f/2;local z="select a boot device: "local D=#z;for y,E in ipairs(u)do local F,G,H=table.unpack(E)local I=2+(H and#H or#F+1+#G)if I>#z then D=I end end;for y,E in ipairs(u)do local J,t,K=table.unpack(E)local L=("  %-"..D.."s"):format(K or J.."/"..t)if#L>#z then D=#L end;if y==A then c.setBackground(0xb4b4b4)else c.setBackground(0xe1e1e1)end;c.set((e-D)/2,C,L)C=C+1 end;c.setBackground(0xe1e1e1)c.set((e-D)/2,f/2-1,z)end;B()while true do local M=table.pack(computer.pullSignal())local N=M[1]if N=="key_down"then local O=M[4]if O==200 then A=A-1;if A<1 then A=#u-A end;B()elseif O==208 then A=A+1;if A>#u then A=A-#u end;B()elseif O==28 then local E=u[A]local P=E[3]or"from "..E[1]local Q,m=s(table.unpack(E))if not Q then error("couldn't boot "..P..": "..(m and tostring(m)or"reason unknown"))else Q(w[A])end end end end end
